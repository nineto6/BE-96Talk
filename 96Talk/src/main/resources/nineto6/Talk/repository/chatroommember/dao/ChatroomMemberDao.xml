<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nineto6.Talk.repository.chatroommember.dao.ChatroomMemberDao">

    <sql id="chatroomMemberColumns">
        CHATROOM_MEMBER_ID, CHATROOM_ID, MEMBER_ID, CHATROOM_SUB_DATE, CHATROOM_UN_SUB_DATE
    </sql>

    <!-- 저장 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="chatroomMemberId">
        INSERT INTO
        CHATROOM_MEMBER (MEMBER_ID, CHATROOM_ID)
        VALUES (#{memberId}, #{chatroomId})
    </insert>

    <!-- chatroomId, memberId 로 삭제 -->
    <delete id="deleteByChatroomIdAndMemberId">
        DELETE FROM
            CHATROOM_MEMBER AS cm
        WHERE
            cm.CHATROOM_ID = #{chatroomId} AND cm.MEMBER_ID = #{memberId}
    </delete>

    <select id="findById" parameterType="Long" resultType="ChatroomMemberVo">
        SELECT
            <include refid="chatroomMemberColumns"/>
        FROM
            CHATROOM_MEMBER AS cm
        WHERE
            cm.CHATROOM_MEMBER_ID = #{chatroomMemberId}
    </select>

    <select id="findByChatroomIdAndMemberId" resultType="ChatroomMemberVo">
        SELECT
            <include refid="chatroomMemberColumns"/>
        FROM
            CHATROOM_MEMBER AS cm
        WHERE
            cm.CHATROOM_ID = #{chatroomId} AND cm.MEMBER_ID = #{memberId}
    </select>

    <!-- 채널 아이디 값, 멤버 아이디 값으로 Chatroom 조회 -->
    <select id="findByChannelIdAndMemberId" parameterType="Map" resultType="ChatroomMemberVo">
        SELECT
            cm.CHATROOM_MEMBER_ID, cm.CHATROOM_ID, cm.MEMBER_ID, cm.CHATROOM_SUB_DATE, cm.CHATROOM_UN_SUB_DATE
        FROM
            CHATROOM AS c INNER JOIN CHATROOM_MEMBER AS cm ON (c.CHATROOM_ID = cm.CHATROOM_ID AND cm.MEMBER_ID = #{memberId})
        WHERE
            c.CHATROOM_CHANNEL_ID = #{channelId}
    </select>

    <!-- 구독일을 최근 날짜로 변경 -->
    <update id="updateSubDateByChannelIdAndMemberId" parameterType="Map">
        UPDATE
            CHATROOM_MEMBER AS cm INNER JOIN CHATROOM AS c ON (c.CHATROOM_ID = cm.CHATROOM_ID)
        SET
            cm.CHATROOM_SUB_DATE = NOW()
        WHERE
            cm.MEMBER_ID = #{memberId} AND c.CHATROOM_CHANNEL_ID = #{channelId}
    </update>

    <!-- 구독일을 NULL 로 변경 -->
    <update id="removeSubDateByChannelIdAndMemberId" parameterType="Map">
        UPDATE
            CHATROOM_MEMBER AS cm INNER JOIN CHATROOM AS c ON (c.CHATROOM_ID = cm.CHATROOM_ID)
        SET
            cm.CHATROOM_SUB_DATE = NULL
        WHERE
            cm.MEMBER_ID = #{memberId} AND c.CHATROOM_CHANNEL_ID = #{channelId}
    </update>

    <!-- 구독 취소일을 최근 날짜로 변경 -->
    <update id="updateUnSubDateByChannelIdAndMemberId" parameterType="Map">
        UPDATE
            CHATROOM_MEMBER AS cm INNER JOIN CHATROOM AS c ON (c.CHATROOM_ID = cm.CHATROOM_ID)
        SET
            cm.CHATROOM_UN_SUB_DATE = NOW()
        WHERE
            cm.MEMBER_ID = #{memberId} AND c.CHATROOM_CHANNEL_ID = #{channelId}
    </update>

    <resultMap id="ChatroomMemberDtoMap" type="ChatroomMemberDto">
        <id property="channelId" column="chatroom_channel_id"/>
        <result property="memberNickname" column="member_nickname"/>
        <result property="chatroomSubDate" column="chatroom_sub_date"/>
        <result property="chatroomUnSubDate" column="chatroom_un_sub_date"/>
    </resultMap>

    <select id="findChatroomMemberDtoByMemberId" parameterType="Long" resultMap="ChatroomMemberDtoMap">
        SELECT
            c.CHATROOM_CHANNEL_ID,
            m.MEMBER_NICKNAME,
            cm.CHATROOM_SUB_DATE, cm.CHATROOM_UN_SUB_DATE
        FROM
            CHATROOM_MEMBER AS cm INNER JOIN CHATROOM AS c ON (c.CHATROOM_ID = cm.CHATROOM_ID)
                        INNER JOIN MEMBER AS m ON (m.MEMBER_ID = cm.MEMBER_ID)
        WHERE
            cm.MEMBER_ID = #{memberId}
    </select>

    <!-- 채널 ID 값 과 사용자 닉네임 값을 가지고 채팅방 안에 존재하는 다른 사용자 리스트 조회 -->
    <select id="findOtherChatroomMemberDtoByChannelIdAndNickname" parameterType="Map" resultMap="ChatroomMemberDtoMap">
        SELECT
            c.CHATROOM_CHANNEL_ID,
            m.MEMBER_NICKNAME,
            cm.CHATROOM_SUB_DATE, cm.CHATROOM_UN_SUB_DATE
        FROM
            CHATROOM AS c INNER JOIN CHATROOM_MEMBER AS cm ON (cm.CHATROOM_ID = c.CHATROOM_ID)
                    INNER JOIN MEMBER AS m ON (cm.MEMBER_ID = m.MEMBER_ID AND m.MEMBER_NICKNAME != #{nickname})
        WHERE
            c.CHATROOM_CHANNEL_ID = #{channelId}
    </select>

</mapper>