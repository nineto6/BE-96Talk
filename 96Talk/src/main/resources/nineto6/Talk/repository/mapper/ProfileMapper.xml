<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nineto6.Talk.repository.mapper.ProfileMapper">

    <sql id="profileColumns">
        PROFILE_ID, MEMBER_ID, PROFILE_STATE_MESSAGE, PROFILE_UPLOAD_FILE_NAME, PROFILE_STORE_FILE_NAME
    </sql>

    <!-- 프로필 등록  NULL 값이 들어가도 저장할 수 있게 jdbcType 설정-->
    <insert id="saveDefault" useGeneratedKeys="true" keyProperty="profileId" parameterType="Profile">
        INSERT INTO
        PROFILE (MEMBER_ID)
        VALUES (#{memberId})
    </insert>

    <update id="updateFileByMemberId" parameterType="Map">
        UPDATE
            PROFILE
        SET
            PROFILE_UPLOAD_FILE_NAME = #{profileUploadFileName},
            PROFILE_STORE_FILE_NAME = #{profileStoreFileName}
        WHERE
            MEMBER_ID = #{memberId}
    </update>

    <update id="updateStateMessageByMemberId" parameterType="Map">
        UPDATE
            PROFILE
        SET
            PROFILE_STATE_MESSAGE = #{profileStateMessage}
        WHERE
            MEMBER_ID = #{memberId}
    </update>

    <select id="findByMemberId" parameterType="Long">
        SELECT
            <include refid="profileColumns"/>
        FROM
            PROFILE AS p
        WHERE
            p.MEMBER_ID = #{memberId}
    </select>

    <select id="findByStoreFileName" parameterType="String">
        SELECT
            <include refid="profileColumns"/>
        FROM
            PROFILE AS p
        WHERE
            p.PROFILE_STORE_FILE_NAME = #{profileStoreFileName}
    </select>

    <update id="updateFileToNull" parameterType="Long">
        UPDATE
            PROFILE
        SET
            PROFILE_UPLOAD_FILE_NAME = NULL,
            PROFILE_STORE_FILE_NAME = NULL
        WHERE
            MEMBER_ID = #{memberId}
    </update>

    <update id="updateStateMessageToNull" parameterType="Long">
        UPDATE
            PROFILE
        SET
            PROFILE_STATE_MESSAGE = NULL
        WHERE
            MEMBER_ID = #{memberId}
    </update>

    <resultMap id="memberNicknameMap" type="String">
        <result column="member_nickname"/>
    </resultMap>

    <resultMap id="profileMap" type="Profile">
        <id property="profileId" column="profile_id"/>
        <result property="memberId" column="member_id"/>
        <result property="profileStateMessage" column="profile_state_message"/>
        <result property="profileUploadFileName" column="profile_upload_file_name"/>
        <result property="profileStoreFileName" column="profile_store_file_name"/>
    </resultMap>

    <resultMap id="memberProfileMap" type="MemberProfile">
        <association property="memberNickname" resultMap="memberNicknameMap"/>
        <association property="profile" resultMap="profileMap"/>
    </resultMap>

    <select id="findByMemberNickname" parameterType="String" resultMap="memberProfileMap">
        SELECT
            m.MEMBER_NICKNAME,
            p.PROFILE_ID, p.MEMBER_ID, p.PROFILE_STATE_MESSAGE, p.PROFILE_UPLOAD_FILE_NAME, p.PROFILE_STORE_FILE_NAME
        FROM
            MEMBER AS m INNER JOIN PROFILE AS p ON m.MEMBER_ID = p.MEMBER_ID
        WHERE
            m.MEMBER_NICKNAME = #{memberNickname}
    </select>

    <select id="findFriendProfileListByMemberId" parameterType="Long" resultType="List" resultMap="memberProfileMap">
        SELECT
            m.MEMBER_NICKNAME,
            p.PROFILE_ID, p.MEMBER_ID, p.PROFILE_STATE_MESSAGE, p.PROFILE_UPLOAD_FILE_NAME, p.PROFILE_STORE_FILE_NAME
        FROM
            FRIEND AS f INNER JOIN MEMBER AS m ON f.FRIEND_MEMBER_ID = m.MEMBER_ID
                        INNER JOIN PROFILE AS p ON m.MEMBER_ID = p.MEMBER_ID
        WHERE
            f.MEMBER_ID = #{memberId};
    </select>

    <!-- 페이지네이션 -->
    <!-- 키워드로 검색하기, 닉네임 정렬 -->
    <select id="findSearchProfileByKeyword" parameterType="nineto6.Talk.model.profile.ProfileSearchDto" resultType="List" resultMap="memberProfileMap">
        SELECT
            m.MEMBER_NICKNAME,
            p.PROFILE_ID, p.MEMBER_ID, p.PROFILE_STATE_MESSAGE, p.PROFILE_UPLOAD_FILE_NAME, p.PROFILE_STORE_FILE_NAME
        FROM
            MEMBER AS m INNER JOIN PROFILE AS p ON m.MEMBER_ID = p.MEMBER_ID
        WHERE
            m.MEMBER_NICKNAME LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY
            m.MEMBER_NICKNAME ASC LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="getMaxCount" parameterType="nineto6.Talk.model.profile.ProfileSearchDto" resultType="Integer">
        SELECT
            COUNT(m.*)
        FROM
            MEMBER AS m
        WHERE
            m.MEMBER_NICKNAME LIKE CONCAT('%', #{keyword}, '%')
    </select>
</mapper>